# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "testing" ]

env:
  PROJECT_ID: playground-366703
  GAR_LOCATION: asia-southeast1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: tai-cluster-dev   # TODO: update to cluster name
  GKE_ZONE: asia-southeast1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: java-deployment # TODO: update to deployment name
  REPOSITORY: java # TODO: update to Artifact Registry docker repository
  IMAGE: java-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: testing

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

   # Configure Workload Identity Federation and generate an access token.
   # - id: 'auth'
   #   name: 'Authenticate to Google Cloud'
   #   uses: 'google-github-actions/auth@v0'
   #   with:
   #     token_format: 'access_token'
   #     workload_identity_provider: 'projects/150905691052/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
   #     service_account: 'id-my-service-account@${{ secrets.GKE_PROJECT }}.iam.gserviceaccount.com'

  # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
  
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker $GKE_ZONE-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - uses: 'google-github-actions/get-gke-credentials@v1'
      with:
         cluster_name: tai-cluster-dev
         location: asia-southeast1

    - name: ready JAVA
      #Set up JDK 19
      uses: actions/setup-java@v1
      with:
        java-version: '19'

    - name: Build JAR
      run: |-
        mvn clean package
          
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz
        chmod u+x ./kustomize
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
